{"version":3,"sources":["assets/video/samplevideo.mp4","logo.svg","VideoPlayer/VideoPlayer.js","OverlayButtons/OverlayButtons.js","App.js","index.js"],"names":["module","exports","VideoPlayer","showFeedbackForm","className","id","width","height","controls","onEnded","src","sampleVideo","type","OverlayButtons","state","feedbackValue","onChangeHandler","e","setState","target","value","onSubmitHandler","props","submitFeedback","this","isVideoEnd","setCurrentTime","onClick","name","placeholder","onChange","Component","App","alert","seconds","document","getElementsByTagName","currentTime","ReactDOM","render","StrictMode","getElementById"],"mappings":"gHAAAA,EAAOC,QAAU,IAA0B,yC,uECA3CD,EAAOC,QAAU,IAA0B,kC,sMCe5BC,EAXK,SAAC,GAAwB,IAAvBC,EAAsB,EAAtBA,iBAElB,OACI,yBAAKC,UAAU,kBACX,2BAAOC,GAAG,UAAUC,MAAM,OAAOC,OAAO,OAAOC,UAAQ,EAACC,QAASN,GAC7D,4BAAQO,IAAKC,IAAaC,KAAK,iBC+ChCC,G,kNAlDXC,MAAQ,CACJC,cAAe,I,EAGnBC,gBAAkB,SAACC,GACf,EAAKC,SAAS,CACVH,cAAeE,EAAEE,OAAOC,S,EAIhCC,gBAAkB,WACd,EAAKC,MAAMC,eAAe,EAAKT,MAAMC,eACrC,EAAKG,SAAS,CACVH,cAAe,M,uDAId,IAAD,OAEGA,EAAiBS,KAAKV,MAAtBC,cAFH,EAGiCS,KAAKF,MAAnCG,EAHH,EAGGA,WAAYC,EAHf,EAGeA,eAEnB,OACI,yBAAKtB,UAAU,WACX,4BAAQA,UAAU,MAAMuB,QAAS,kBAAMD,EAAe,MAAtD,mBACA,4BAAQtB,UAAU,MAAMuB,QAAS,kBAAMD,EAAe,OAAtD,qBACA,4BAAQtB,UAAU,MAAMuB,QAAS,kBAAMD,EAAe,OAAtD,oBACCD,EACK,yBAAKrB,UAAU,gBACb,wBAAIA,UAAU,aAAd,sBACA,yBAAKA,UAAU,YACX,2BAAOQ,KAAK,OAAOgB,KAAK,WAAWC,YAAY,cAAcT,MAAOL,EAAee,SAAUN,KAAKR,mBAEtG,yBAAKZ,UAAU,aACX,4BAAQA,UAAU,MACVuB,QAASZ,EACI,kBAAM,EAAKM,gBAAgBN,IAC1B,MAHtB,YAON,U,GA3COgB,cC8CdC,E,4MAzCblB,MAAQ,CACNW,YAAY,G,EAGdtB,iBAAmB,WACd,EAAKe,SAAS,CACbO,YAAY,K,EAIlBF,eAAiB,SAACH,GAChBa,MAAM,aAAab,GACnB,EAAKF,SAAS,CACZO,YAAY,K,EAIhBC,eAAiB,SAACQ,GACJC,SAASC,qBAAqB,SAAS,GAC/CC,YAAcH,EAClB,EAAKhB,SAAS,CACZO,YAAY,K,uDAKd,OACE,yBAAKrB,UAAU,OACb,0DACA,yBAAKA,UAAU,kBACZ,kBAAC,EAAD,CAAaD,iBAAkBqB,KAAKrB,mBACpC,kBAAC,EAAD,CACGsB,WAAYD,KAAKV,MAAMW,WACvBF,eAAgBC,KAAKD,eACrBG,eAAgBF,KAAKE,uB,GApCjBK,aCFlBO,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFL,SAASM,eAAe,W","file":"static/js/main.895076ff.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/samplevideo.d422bedd.mp4\";","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React from 'react';\r\nimport './VideoPlayer.css';\r\nimport sampleVideo from '../assets/video/samplevideo.mp4';\r\n\r\nconst VideoPlayer = ({showFeedbackForm}) => {\r\n\r\n    return(\r\n        <div className=\"videoPlayerDiv\">\r\n            <video id=\"myVideo\" width=\"100%\" height=\"100%\" controls onEnded={showFeedbackForm}>\r\n                <source src={sampleVideo} type=\"video/mp4\"/>\r\n            </video>\r\n        </div>  \r\n    )\r\n}\r\n\r\nexport default VideoPlayer;","import React from 'react';\r\nimport { Component } from 'react';\r\nimport './OverlayButtons.css';\r\n\r\nclass OverlayButtons extends Component{\r\n\r\n    state = {\r\n        feedbackValue: \"\"\r\n    }\r\n\r\n    onChangeHandler = (e) => {\r\n        this.setState({\r\n            feedbackValue: e.target.value\r\n        })\r\n    }\r\n\r\n    onSubmitHandler = () => {\r\n        this.props.submitFeedback(this.state.feedbackValue)\r\n        this.setState({\r\n            feedbackValue: \"\"\r\n        })\r\n    }\r\n\r\n    render(){\r\n\r\n        const {feedbackValue} = this.state;\r\n        const {isVideoEnd, setCurrentTime} = this.props;\r\n\r\n        return(\r\n            <div className=\"overlay\">\r\n                <button className=\"btn\" onClick={() => setCurrentTime(23)}>Android Speaker</button>\r\n                <button className=\"btn\" onClick={() => setCurrentTime(144)}>Combo Card Reader</button>\r\n                <button className=\"btn\" onClick={() => setCurrentTime(206)}>iPhone Maze Case</button>\r\n                {isVideoEnd\r\n                    ? <div className=\"feedbackForm\">\r\n                        <h3 className=\"textWhite\">How was the video?</h3>\r\n                        <div className=\"inputDiv\">\r\n                            <input type=\"text\" name=\"feedback\" placeholder=\"Good or Bad\" value={feedbackValue} onChange={this.onChangeHandler}/>\r\n                        </div>\r\n                        <div className=\"submitDiv\">\r\n                            <button className=\"btn\" \r\n                                    onClick={feedbackValue\r\n                                                ?() => this.onSubmitHandler(feedbackValue)\r\n                                                : null}\r\n                            >Submit</button>\r\n                        </div>\r\n                      </div>\r\n                    : null \r\n                }\r\n                \r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default OverlayButtons;","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport VideoPlayer from './VideoPlayer/VideoPlayer';\nimport OverlayButtons from './OverlayButtons/OverlayButtons';\nimport { Component } from 'react';\n\nclass App extends Component {\n\n  state = {\n    isVideoEnd: false,\n  }\n\n  showFeedbackForm = () => {\n       this.setState({\n        isVideoEnd: true\n       }) \n  }\n\n  submitFeedback = (value) => {\n    alert(\"Feedback: \"+value);\n    this.setState({\n      isVideoEnd: false\n    }) \n  }\n\n  setCurrentTime = (seconds) => {\n    const vid = document.getElementsByTagName('video')[0];\n    vid.currentTime = seconds;\n    this.setState({\n      isVideoEnd: false\n    }) \n}\n\n  render(){\n    return (\n      <div className=\"App\">\n        <h2>Assignment - Princetonhive</h2>\n        <div className=\"videoContainer\">\n           <VideoPlayer showFeedbackForm={this.showFeedbackForm}/>\n           <OverlayButtons \n              isVideoEnd={this.state.isVideoEnd}\n              submitFeedback={this.submitFeedback}\n              setCurrentTime={this.setCurrentTime}/>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}